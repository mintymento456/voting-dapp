{"ast":null,"code":"var _jsxFileName = \"/Users/mihirchitalia/Desktop/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Select from 'react-select';\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, loadChairperson, getCurrentWalletConnected, vote, addPerson, votingContract, determineWinner, loadOptions } from \"./util/interact.js\";\nimport alchemylogo from \"./alchemylogo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HelloWorld = () => {\n  _s();\n\n  //state variables\n  const [options, setOptions] = useState([]);\n  const [winner, setWinner] = useState(\"\");\n  const [showVoteDropdown, setShowVoteDropdown] = useState(false);\n  const [showRegistration, setShowRegistration] = useState(true);\n  const [showWinner, setShowWinner] = useState(false);\n  const [voteChoice, setVoteChoice] = useState(\"\");\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [chairperson, setChairperson] = useState(\"\"); //default message\n\n  const [newMessage, setNewMessage] = useState(\"\"); //called only once\n\n  useEffect(async () => {\n    const cp = await loadChairperson();\n    setChairperson(cp);\n    const o = await loadOptions();\n    console.log(\"Options are: \" + o);\n    const refinedOptions = o.map(name => {\n      return {\n        value: name,\n        label: name\n      };\n    });\n    setOptions(refinedOptions);\n    addSmartContractListener();\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  function addSmartContractListener() {\n    votingContract.events.PersonAdded({}, (error, data) => {\n      console.log(\"Person was added\");\n\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        const refinedOptions = data.returnValues[0].map(name => {\n          return {\n            value: name,\n            label: name\n          };\n        });\n        console.log(\"Refined Options: \" + refinedOptions);\n        setOptions(refinedOptions);\n      }\n    }); // votingContract.events.VoteComplete({}, (error, data) => {\n    //   console.log(\"The vote was completed!\");\n    //   if (error) {\n    //     setStatus(\"ðŸ˜¥ \" + error.message);\n    //   } else {\n    //     const winnerName = data.returnValues[0];\n    //     setWinner(winnerName);\n    //     setShowWinner(true);\n    //   }\n    // });\n  }\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this));\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onRegisterPressed = async () => {\n    //remove this and set show vote dropdown when \n    const {\n      status\n    } = await addPerson(walletAddress, newMessage);\n    setStatus(status);\n    await status;\n    setShowVoteDropdown(true);\n    setShowRegistration(false);\n  };\n\n  const onVotePressed = async () => {\n    await vote(walletAddress, voteChoice);\n  };\n\n  const onDetermineWinner = async () => {\n    const winnerName = await determineWinner(walletAddress);\n    setWinner(winnerName);\n    setShowWinner(true);\n  }; //the UI of our component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      style: {\n        height: \"70px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        src: alchemylogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"walletButton\",\n        onClick: connectWalletPressed,\n        children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"meat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"registration\",\n        children: [showRegistration && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Please enter your name here\",\n            onChange: e => setNewMessage(e.target.value),\n            value: newMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"buttons\",\n            style: {\n              marginTop: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"register\",\n              onClick: onRegisterPressed,\n              style: {\n                marginTop: \"0px\"\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"status\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"voting\",\n        children: [showVoteDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            options: options,\n            onChange: e => setVoteChoice(e.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"vote\",\n            onClick: onVotePressed,\n            style: {\n              marginTop: \"20px\"\n            },\n            children: \"Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"determineWinner\",\n            onClick: onDetermineWinner,\n            style: {\n              marginTop: \"0px\",\n              marginLeft: \"20px\"\n            },\n            children: \"Tally Votes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), showWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"The winner is \", winner, \"! Congrats \\uD83C\\uDF89\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HelloWorld, \"z7RbjqiGQECr/Bwai3h91W/X5tM=\");\n\n_c = HelloWorld;\nexport default HelloWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"sources":["/Users/mihirchitalia/Desktop/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js"],"names":["React","Select","useEffect","useState","connectWallet","loadChairperson","getCurrentWalletConnected","vote","addPerson","votingContract","determineWinner","loadOptions","HelloWorld","options","setOptions","winner","setWinner","showVoteDropdown","setShowVoteDropdown","showRegistration","setShowRegistration","showWinner","setShowWinner","voteChoice","setVoteChoice","walletAddress","setWallet","status","setStatus","chairperson","setChairperson","newMessage","setNewMessage","cp","o","console","log","refinedOptions","map","name","value","label","addSmartContractListener","address","addWalletListener","events","PersonAdded","error","data","message","returnValues","window","ethereum","on","accounts","length","connectWalletPressed","walletResponse","onRegisterPressed","onVotePressed","onDetermineWinner","winnerName","height","alchemylogo","String","substring","e","target","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Select from 'react-select';\nimport { useEffect, useState } from \"react\";\nimport {\n  connectWallet,\n  loadChairperson,\n  getCurrentWalletConnected,\n  vote,\n  addPerson,\n  votingContract,\n  determineWinner,\n  loadOptions\n} from \"./util/interact.js\";\n\nimport alchemylogo from \"./alchemylogo.svg\";\n\nconst HelloWorld = () => {\n  //state variables\n  const [options, setOptions] = useState([]);\n  const [winner, setWinner] = useState(\"\");\n  const [showVoteDropdown, setShowVoteDropdown] = useState(false);\n  const [showRegistration, setShowRegistration] = useState(true); \n  const [showWinner, setShowWinner] = useState(false); \n  const [voteChoice, setVoteChoice] = useState(\"\"); \n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [chairperson, setChairperson] = useState(\"\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  //called only once\n  useEffect(async () => {\n    const cp = await loadChairperson();\n    setChairperson(cp);\n\n    const o = await loadOptions();\n    console.log(\"Options are: \" + o);\n    const refinedOptions = o.map((name) => { \n      return {value: name, label: name}}\n    );\n    setOptions(refinedOptions);\n\n    addSmartContractListener();\n\n    const {address, status} = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n\n    addWalletListener();\n\n  }, []);\n\n\n  function addSmartContractListener() {\n\n\n    votingContract.events.PersonAdded({}, (error, data) => {\n      console.log(\"Person was added\");\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        const refinedOptions = data.returnValues[0].map((name) => { \n          return {value: name, label: name}}\n        );\n\n        console.log(\"Refined Options: \" + refinedOptions);\n\n        setOptions(refinedOptions);\n      }\n    });\n\n    // votingContract.events.VoteComplete({}, (error, data) => {\n    //   console.log(\"The vote was completed!\");\n    //   if (error) {\n    //     setStatus(\"ðŸ˜¥ \" + error.message);\n    //   } else {\n    //     const winnerName = data.returnValues[0];\n    //     setWinner(winnerName);\n    //     setShowWinner(true);\n    //   }\n    // });\n    \n  }\n\n  function addWalletListener() {\n  if (window.ethereum) {\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\n      if (accounts.length > 0) {\n        setWallet(accounts[0]);\n      } else {\n        setWallet(\"\");\n        setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n      }\n    });\n  } else {\n    setStatus(\n      <p>\n        {\" \"}\n        ðŸ¦Š{\" \"}\n        <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n          You must install Metamask, a virtual Ethereum wallet, in your\n          browser.\n        </a>\n      </p>\n    );\n  }\n}\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onRegisterPressed = async () => {\n    //remove this and set show vote dropdown when \n    \n    const { status } = await addPerson(walletAddress, newMessage);\n    setStatus(status);\n    await status;\n    setShowVoteDropdown(true);\n    setShowRegistration(false);\n  };\n\n  const onVotePressed = async () => {\n    await vote(walletAddress, voteChoice);\n  };\n  const onDetermineWinner = async () => {\n    const winnerName = await determineWinner(walletAddress);\n    setWinner(winnerName);\n    setShowWinner(true);\n  };\n\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n\n      <div id=\"header\" style={{ height: \"70px\" }}>\n        <img id=\"logo\" src={alchemylogo}></img>\n        <button id=\"walletButton\" onClick={connectWalletPressed}>\n          {walletAddress.length > 0 ? (\n            \"Connected: \" +\n            String(walletAddress).substring(0, 6) +\n            \"...\" +\n            String(walletAddress).substring(38)\n          ) : (\n            <span>Connect Wallet</span>\n          )}\n        </button>\n      </div>\n\n      <div id='meat'>\n            <div id=\"registration\">\n              { showRegistration && (\n\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Please enter your name here\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  />\n                  <div id=\"buttons\" style={{ marginTop: \"0px\" }}>\n                    <button id=\"register\" onClick={onRegisterPressed} style={{ marginTop: \"0px\" }} >\n                      Register\n                    </button>\n                    \n                  </div>\n\n                </div>\n\n              )}\n              <p id=\"status\">{status}</p>\n            </div>\n            <div id=\"voting\">\n              { showVoteDropdown && (\n                <div>\n\n                  <Select options={options} onChange={(e) => setVoteChoice(e.value)}/>\n\n                  <button id=\"vote\" onClick={onVotePressed} style={{ marginTop: \"20px\" }}>\n                    Vote\n                  </button>\n\n                  <button id=\"determineWinner\" onClick={onDetermineWinner} style={{ marginTop: \"0px\", marginLeft: \"20px\" }}>\n                    Tally Votes!\n                  </button>\n\n                  \n                </div>\n              )}\n              { showWinner && (\n                <div>\n                  <h2>The winner is {winner}! Congrats ðŸŽ‰</h2>\n                </div>\n              )}\n\n            </div>\n\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default HelloWorld;\n"]},"metadata":{},"sourceType":"module"}